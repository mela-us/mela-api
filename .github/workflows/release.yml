name: Release

on:
    push:
        branches:
        - release/*

permissions:
    contents: write
    packages: write
    id-token: write

jobs:
  check-commit-match-uat:
    runs-on: ubuntu-latest
    outputs:
      match: ${{ steps.check.outputs.match }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Fetch uat branch commit
        id: check
        run: |
          git fetch origin uat
          UAT_HEAD=$(git rev-parse origin/uat)
          echo "UAT_HEAD=$UAT_HEAD"
          echo "RELEASE_HEAD=${GITHUB_SHA}"
          if [ "$UAT_HEAD" = "${GITHUB_SHA}" ]; then
            echo "match=true" >> $GITHUB_OUTPUT
          else
            echo "match=false" >> $GITHUB_OUTPUT
            echo "Release commit does NOT match latest commit on uat. Failing."
            exit 1
          fi
  extract-image-name:
    needs: check-commit-match-uat
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.extract.outputs.image }}
    steps:
      - name: Extract short SHA
        id: short-sha
        run: echo "short-sha=${GITHUB_SHA:0:7}" >> "$GITHUB_OUTPUT"

      - name: Extract Image Name
        id: extract
        run: echo "image=ghcr.io/${{ github.repository }}:${{ steps.short-sha.outputs.short-sha }}" >> $GITHUB_OUTPUT
  
  extract-version:
    needs: check-commit-match-uat
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract.outputs.version }}
    steps:
      - name: Extract Version
        id: extract
        run: echo "version=${GITHUB_REF_NAME#release/}" >> $GITHUB_OUTPUT

  promote-image:
    needs: [extract-image-name, extract-version]
    uses: ./.github/workflows/promote-image.yml
    with:
      image_name: ${{ needs.extract-image-name.outputs.image }}
      new_tag: ${{ needs.extract-version.outputs.version }}

  tag-release:
    runs-on: ubuntu-latest
    needs: [promote-image, extract-version]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Git
        run: |
            git config user.name "github-actions"
            git config user.email "actions@github.com"

      - name: Create Git Tag
        run: |
            VERSION="${{ needs.extract-version.outputs.version }}"
            echo "Creating tag $VERSION for commit ${{ github.sha }}"
            git tag "$VERSION" "${{ github.sha }}"
            git push origin "$VERSION"


